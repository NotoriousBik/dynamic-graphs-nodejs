<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Graphs</title>
  <!-- chart js import -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
</head>

<body>
  <h1>Graphs</h1>
<!-- logout button -->
 <div class="section">
  <a href="/auth/logout" class="btn pink darken-1">
    <i class="fas fa-ambulance"></i> Logout
  </a>

</div>
  <div>
    
    <!-- Charts placing -->
    <div style="width:450px;height:940px;float:left;margin-top:30px">
      <canvas id="memoryChart"></canvas>
    </div>
    <div style="width:450px;height:940px;float:right;margin-left:30px;margin-top:30px">
      <canvas id="cpuChart"></canvas>
    </div>
  </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"
    integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

  <script>
    //memory graph setup
    window.addEventListener("load", setupMemory);
    setInterval(setupMemory, 10000)
    async function setupMemory() {
      const ctx = document.getElementById("memoryChart").getContext("2d");
      const data = await getData('/data/memory', 'currentMemory')
      const memoryChart = new Chart(ctx, {
        type: "bar",
        data: {
          labels: data.time,
          datasets: [
            {
              label: "Memory",
              data: data.data,
              fill: false,
              borderColor: "rgba(255, 99, 132, 1)",
              backgroundColor: "rgba(255, 99, 132, 0.5)",
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            yAxes: [{
              ticks: {
                beginAtZero: true,
                crossAlign: "far"
              }
            }]
          }
        },
      });
    }

    //cpu graph setup
    window.addEventListener("load", setupCPU);
    setInterval(setupCPU, 10000)
    async function setupCPU() {
      const ctx = document.getElementById("cpuChart").getContext("2d");
      const data = await getData('/data/cpu', 'currentCPU')
      const cpuChart = new Chart(ctx, {
        type: "bar",
        data: {
          labels: data.time,
          datasets: [
            {
              label: "CPU",
              data: data.data,
              fill: false,
              borderColor: "rgba(255, 99, 132, 1)",
              backgroundColor: "rgba(255, 99, 132, 0.5)",
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            yAxes: [{
              ticks: {
                beginAtZero: true
              }
            }]
          }
        },
      });
    }

    //function which retrieves data using axios library 
    async function getData(path, xName) {
      const {
        data: { allData },
      } = await axios.get(path)

      const time = []
      const data = []
      for (let i = allData.length - 6; i < allData.length; i++) {
        time.push(allData[i].time)
        data.push(allData[i][xName])
      }
      return { time, data }
    }
  </script>
</body>

</html>